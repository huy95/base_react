{"ast":null,"code":"var _jsxFileName = \"/Users/huy/Documents/react-js/hook_js/base_react/src/useRefHooks.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UseRefHook() {\n  _s();\n  const [count, setCount] = useState(60);\n  let timerID = useRef(0);\n  const handleStart = () => {\n    console.log(\"start-render\");\n    timerID.current = setInterval(() => {\n      setCount(prevCount => prevCount - 1);\n    }, 1000);\n  };\n  const handleStop = () => {\n    console.log(\"stop-render\");\n    console.log(timerID);\n    clearInterval(timerID.current);\n  };\n  console.log(\"reload-render\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(UseRefHook, \"snPrdNHqI+qtwR7vPS5dxHrpWVQ=\");\n_c = UseRefHook;\nexport default UseRefHook;\nvar _c;\n$RefreshReg$(_c, \"UseRefHook\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","UseRefHook","_s","count","setCount","timerID","handleStart","console","log","current","setInterval","prevCount","handleStop","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/huy/Documents/react-js/hook_js/base_react/src/useRefHooks.js"],"sourcesContent":["import {useRef, useState} from \"react\";\n\n\nfunction UseRefHook() {\n    const [count, setCount] = useState(60);\n    let timerID = useRef(0)\n\n    const handleStart = () => {\n        console.log(\"start-render\")\n         timerID.current = setInterval(() => {\n            setCount(prevCount => prevCount - 1);\n        }, 1000)\n    }\n\n    const handleStop = () => {\n        console.log(\"stop-render\")\n        console.log(timerID);\n        clearInterval(timerID.current)\n    }\n    console.log(\"reload-render\")\n    return (\n        <div>\n            <p>{count}</p>\n            <button onClick={ handleStart}>start</button>\n            <button onClick={handleStop}>Stop</button>\n        </div>\n    )\n}\n\nexport default UseRefHook"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAIO,OAAO,GAAGR,MAAM,CAAC,CAAC,CAAC;EAEvB,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC1BH,OAAO,CAACI,OAAO,GAAGC,WAAW,CAAC,MAAM;MACjCN,QAAQ,CAACO,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;IACxC,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBL,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BD,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACpBQ,aAAa,CAACR,OAAO,CAACI,OAAO,CAAC;EAClC,CAAC;EACDF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5B,oBACIR,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAIX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdlB,OAAA;MAAQmB,OAAO,EAAGb,WAAY;MAAAQ,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7ClB,OAAA;MAAQmB,OAAO,EAAEP,UAAW;MAAAE,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd;AAAChB,EAAA,CAxBQD,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AA0BnB,eAAeA,UAAU;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}