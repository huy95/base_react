{"ast":null,"code":"var _jsxFileName = \"/Users/huy/Documents/react-js/hook_js/base_react/src/useRefHooks.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UseRefHook() {\n  _s();\n  const [count, setCount] = useState(0);\n  let timerID;\n  const handleStart = () => {\n    timerID = setInterval(() => {\n      setCount(perCount => perCount + 1);\n    }, 1000);\n  };\n  const handleStop = () => {\n    clearInterval(timerID);\n  };\n  console.log(\"reload-render\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleStart,\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(UseRefHook, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = UseRefHook;\nexport default UseRefHook;\nvar _c;\n$RefreshReg$(_c, \"UseRefHook\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","UseRefHook","_s","count","setCount","timerID","handleStart","setInterval","perCount","handleStop","clearInterval","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/huy/Documents/react-js/hook_js/base_react/src/useRefHooks.js"],"sourcesContent":["import {useState, useRef} from \"react\";\n\n\nfunction UseRefHook() {\n    const [count, setCount] = useState(0);\n\n    let timerID\n    const handleStart = () => {\n        timerID = setInterval(() => {\n            setCount(perCount => perCount + 1)\n        }, 1000)\n    }\n\n    const handleStop = () => {\n        clearInterval(timerID)\n    }\n    console.log(\"reload-render\")\n    return (\n        <div>\n            <p>{count}</p>\n            <button onClick={() => handleStart}>start</button>\n            <button onClick={() => handleStop}>Stop</button>\n        </div>\n    )\n}\n\nexport default UseRefHook"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErC,IAAIQ,OAAO;EACX,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBD,OAAO,GAAGE,WAAW,CAAC,MAAM;MACxBH,QAAQ,CAACI,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC;IACtC,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBC,aAAa,CAACL,OAAO,CAAC;EAC1B,CAAC;EACDM,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5B,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAIV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMZ,WAAY;MAAAO,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMT,UAAW;MAAAI,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAACf,EAAA,CArBQD,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAuBnB,eAAeA,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}