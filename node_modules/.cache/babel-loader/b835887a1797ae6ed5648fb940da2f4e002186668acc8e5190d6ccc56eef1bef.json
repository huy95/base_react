{"ast":null,"code":"var _jsxFileName = \"/Users/huy/Documents/react-js/hook_js/base_react/src/useRefHooks.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useReducer, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestHook() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UseReducer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = TestHook;\nfunction UseRefHook() {\n  _s();\n  const [count, setCount] = useState(60);\n  let timerID = useRef(0);\n  const handleStart = () => {\n    console.log(\"start-render\");\n    timerID.current = setInterval(() => {\n      setCount(prevCount => prevCount - 1);\n    }, 1000);\n  };\n  const handleStop = () => {\n    console.log(\"stop-render\");\n    console.log(timerID);\n    clearInterval(timerID.current);\n  };\n  console.log(\"reload-render\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(UseRefHook, \"snPrdNHqI+qtwR7vPS5dxHrpWVQ=\");\n_c2 = UseRefHook;\nconst initState = 0;\nconst UP_ACTION = 'up';\nconst DOWN_ACTION = 'down';\nconst reducer = (state, action) => {\n  console.log('reducer running ...');\n  switch (action.type) {\n    case UP_ACTION:\n      return state + 1;\n    case DOWN_ACTION:\n      return state - 1;\n    default:\n      throw new Error(\"Invalid action\");\n  }\n};\nfunction UseReducer() {\n  _s2();\n  const [count, dispatch] = useReducer(reducer, initState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: UP_ACTION\n      }),\n      children: \"Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: DOWN_ACTION\n      }),\n      children: \"Down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s2(UseReducer, \"t0rqRrWnfl+g/Fa7XFOSWfV8J6k=\");\n_c3 = UseReducer;\nexport default TestHook;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TestHook\");\n$RefreshReg$(_c2, \"UseRefHook\");\n$RefreshReg$(_c3, \"UseReducer\");","map":{"version":3,"names":["useReducer","useRef","useState","jsxDEV","_jsxDEV","TestHook","children","UseReducer","fileName","_jsxFileName","lineNumber","columnNumber","_c","UseRefHook","_s","count","setCount","timerID","handleStart","console","log","current","setInterval","prevCount","handleStop","clearInterval","onClick","_c2","initState","UP_ACTION","DOWN_ACTION","reducer","state","action","type","Error","_s2","dispatch","_c3","$RefreshReg$"],"sources":["/Users/huy/Documents/react-js/hook_js/base_react/src/useRefHooks.js"],"sourcesContent":["import {useReducer, useRef, useState} from \"react\";\n\nfunction TestHook() {\n    return (\n        <div>\n            {<UseReducer/>}\n            {/*<ul>*/}\n            {/*    {post.map((item) => (<li>*/}\n            {/*        {item.title}*/}\n            {/*    </li>))}*/}\n            {/*</ul>*/}\n        </div>\n    )\n}\nfunction UseRefHook() {\n    const [count, setCount] = useState(60);\n    let timerID = useRef(0)\n\n    const handleStart = () => {\n        console.log(\"start-render\")\n         timerID.current = setInterval(() => {\n            setCount(prevCount => prevCount - 1);\n        }, 1000)\n    }\n\n    const handleStop = () => {\n        console.log(\"stop-render\")\n        console.log(timerID);\n        clearInterval(timerID.current)\n    }\n    console.log(\"reload-render\")\n    return (\n        <div>\n            <p>{count}</p>\n            <button onClick={ handleStart}>start</button>\n            <button onClick={handleStop}>Stop</button>\n        </div>\n    )\n}\n\nconst initState = 0;\nconst UP_ACTION = 'up';\nconst DOWN_ACTION = 'down';\n\nconst reducer = (state, action) => {\n    console.log('reducer running ...')\n    switch (action.type) {\n        case UP_ACTION: \n            return state + 1;\n        case DOWN_ACTION:\n            return state - 1;\n        default:\n            throw new Error(\"Invalid action\");\n    }\n}\n\nfunction UseReducer() {\n    const [count, dispatch] = useReducer(reducer, initState);\n\n    return (\n        <div>\n            <p>{count}</p>\n            <button onClick={() => dispatch({ type: UP_ACTION })}>Up</button>\n            <button onClick={() => dispatch({ type: DOWN_ACTION })}>Down</button>\n        </div>\n    )\n}\n\nexport default TestHook"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}