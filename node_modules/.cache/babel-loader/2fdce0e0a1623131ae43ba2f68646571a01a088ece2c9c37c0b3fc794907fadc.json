{"ast":null,"code":"var _jsxFileName = \"/Users/huy/Documents/react-js/hook_js/base_react/src/useContext/useContext.js\",\n  _s = $RefreshSig$();\n// truyền dữ liệu từ cha xuống con có 2 cách :\n\n// 1. sử dụng thằng props\n// 2. sử dụng hook context\n\n// ví dụ: có màn A => màn B => màn C \n\nimport { createContext, useState } from \"react\";\nimport ParagraphUseContext from \"./useContextChild\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nfunction AppUseContext() {\n  _s();\n  const [theme, setTheme] = useState('blue');\n  const toggleTheme = () => {\n    setTheme(theme === 'yellow' ? 'blue' : 'yellow');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: theme,\n    children: [\"        \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: 20\n        },\n        onClick: toggleTheme,\n        children: \"Toggle theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ParagraphUseContext, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 54\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(AppUseContext, \"IUbWgt2Nr3jAKvPpgpyecCJJCVA=\");\n_c = AppUseContext;\nexport default AppUseContext;\nvar _c;\n$RefreshReg$(_c, \"AppUseContext\");","map":{"version":3,"names":["createContext","useState","ParagraphUseContext","jsxDEV","_jsxDEV","ThemeContext","AppUseContext","_s","theme","setTheme","toggleTheme","Provider","value","children","style","padding","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/huy/Documents/react-js/hook_js/base_react/src/useContext/useContext.js"],"sourcesContent":["// truyền dữ liệu từ cha xuống con có 2 cách :\n\n// 1. sử dụng thằng props\n// 2. sử dụng hook context\n\n// ví dụ: có màn A => màn B => màn C \n\n\nimport { createContext, useState } from \"react\";\nimport ParagraphUseContext from \"./useContextChild\";\n\n\nexport const ThemeContext = createContext()\nfunction AppUseContext(){\n    const [theme, setTheme] = useState('blue')\n\n    const toggleTheme = () => {\n        setTheme(theme === 'yellow' ? 'blue': 'yellow');\n    }\n\n    return (\n        <ThemeContext.Provider value={theme}>        <div>\n            <button style={{padding: 20}} onClick={toggleTheme}>\n                Toggle theme\n            </button>\n            <ParagraphUseContext/>\n        </div>\n        </ThemeContext.Provider>\n\n    )\n}\n\nexport default AppUseContext"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;;AAGA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,mBAAmB,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAC3C,SAASM,aAAaA,CAAA,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EAE1C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAACD,KAAK,KAAK,QAAQ,GAAG,MAAM,GAAE,QAAQ,CAAC;EACnD,CAAC;EAED,oBACIJ,OAAA,CAACC,YAAY,CAACM,QAAQ;IAACC,KAAK,EAAEJ,KAAM;IAAAK,QAAA,GAAC,UAAQ,eAAAT,OAAA;MAAAS,QAAA,gBACzCT,OAAA;QAAQU,KAAK,EAAE;UAACC,OAAO,EAAE;QAAE,CAAE;QAACC,OAAO,EAAEN,WAAY;QAAAG,QAAA,EAAC;MAEpD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThB,OAAA,CAACF,mBAAmB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAGhC;AAACb,EAAA,CAjBQD,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAmBtB,eAAeA,aAAa;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}