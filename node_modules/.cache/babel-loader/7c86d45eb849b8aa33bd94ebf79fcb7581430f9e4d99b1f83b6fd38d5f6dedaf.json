{"ast":null,"code":"var _jsxFileName = \"/Users/huy/Documents/react-js/hook_js/my-app/src/useStateExample.js\",\n  _s = $RefreshSig$();\n// ex:\n// 1. ramdom gift\n// 2. two-way binding\n// 3. todolist\n\nimport { useState } from \"react\";\n\n// const gifts = [\n//     'cpu i9',\n//     'ram 32gb rgb',\n//     'rgb keyboard'\n// ]\n// 1. ramdom gift\n// function AppExampleUseState () {\n//     const [gift, setGift] = useState();\n//     const randomGift= () => {\n//         const index = Math.floor(Math.random()*gifts.length);\n//         setGift(gifts[index]);\n//     }\n//     return (\n//         <div style={{ padding: 32}}> \n//         <h1>{gift || 'Chưa có phần thưởng'}</h1>\n//         <button onClick={randomGift}> receive reward</button>\n//         </div>\n//     )\n// }\n\n// 2. two-way binding\n//ex 1\n// function AppExampleUseState () {\n//     const [name, setName] = useState(\"\")\n//     const [email, setEmail] = useState(\"\")\n\n//     const handleSubmit = () => {\n//         console.log(name, email)\n//         setName(name)\n//         setEmail(email)\n//     }\n//     console.log(name, email)\n//     return (\n//         <div style={{ padding: 32}}> \n//         <input value={name} onChange={e => setName(e.target.value)}/>\n//         <input value={email} onChange={e=> setEmail(e.target.value)}/>\n//         <button onClick={handleSubmit}> receive reward</button>\n//         </div>\n//     )\n// }\n\n//ex2\n// const courses = [{\n//     id : 1,\n//     name: 'html, css'\n// }, {\n//     id : 2,\n//     name: 'js'\n// }, {\n//     id: 3,\n//     name: 'ReactJS'\n// }\n\n// ]\n// function AppExampleUseState () {\n//     const [checked, setCheck] = useState([])\n\n//     const handleSubmit = (id) => {\n//         setCheck(pre => {\n//             if(checked.includes(id)){\n//                 return  checked.filter(item => item !== id);\n//                 } else {\n//                    return [...pre, id]  \n//                 }\n//         })\n\n//     }\n\n//     return (\n//         <div style={{ padding: 32}}> \n//             {\n//                 courses.map(course => (<div key={course.id}>\n//                     <input type=\"checkbox\" \n//                         checked={checked.includes(course.id)}\n//                         onChange={() =>handleSubmit(course.id)}\n//                     />\n//                     {course.name}\n//                 </div>))\n//             }\n//         </div>\n//     )\n// }\n\n// ex3 todolist\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppExampleUseState() {\n  _s();\n  const [job, setJob] = useState(\"\");\n  const [jobs, setJobs] = useState([]);\n  const handleSetJobs = () => {\n    setJobs([...jobs, job]);\n    setJob(\"\");\n  };\n  console.log(jobs);\n  const clearJob = nameJob => {\n    setJobs(jobs.filter(item => item !== nameJob));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 32\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: job,\n        onChange: item => setJob(item.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetJobs,\n        children: \"clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), jobs.map((j, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clearJob(j),\n        children: \"clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 41\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(AppExampleUseState, \"+y5n1hSMwGGFsbtBWll0OqfRYp0=\");\n_c = AppExampleUseState;\nexport default AppExampleUseState;\nvar _c;\n$RefreshReg$(_c, \"AppExampleUseState\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AppExampleUseState","_s","job","setJob","jobs","setJobs","handleSetJobs","console","log","clearJob","nameJob","filter","item","style","padding","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","j","index","_c","$RefreshReg$"],"sources":["/Users/huy/Documents/react-js/hook_js/my-app/src/useStateExample.js"],"sourcesContent":["// ex:\n// 1. ramdom gift\n// 2. two-way binding\n// 3. todolist\n\nimport { useState } from \"react\";\n\n// const gifts = [\n//     'cpu i9',\n//     'ram 32gb rgb',\n//     'rgb keyboard'\n// ]\n// 1. ramdom gift\n// function AppExampleUseState () {\n//     const [gift, setGift] = useState();\n//     const randomGift= () => {\n//         const index = Math.floor(Math.random()*gifts.length);\n//         setGift(gifts[index]);\n//     }\n//     return (\n//         <div style={{ padding: 32}}> \n//         <h1>{gift || 'Chưa có phần thưởng'}</h1>\n//         <button onClick={randomGift}> receive reward</button>\n//         </div>\n//     )\n// }\n\n// 2. two-way binding\n//ex 1\n// function AppExampleUseState () {\n//     const [name, setName] = useState(\"\")\n//     const [email, setEmail] = useState(\"\")\n\n//     const handleSubmit = () => {\n//         console.log(name, email)\n//         setName(name)\n//         setEmail(email)\n//     }\n//     console.log(name, email)\n//     return (\n//         <div style={{ padding: 32}}> \n//         <input value={name} onChange={e => setName(e.target.value)}/>\n//         <input value={email} onChange={e=> setEmail(e.target.value)}/>\n//         <button onClick={handleSubmit}> receive reward</button>\n//         </div>\n//     )\n// }\n\n//ex2\n// const courses = [{\n//     id : 1,\n//     name: 'html, css'\n// }, {\n//     id : 2,\n//     name: 'js'\n// }, {\n//     id: 3,\n//     name: 'ReactJS'\n// }\n\n\n// ]\n// function AppExampleUseState () {\n//     const [checked, setCheck] = useState([])\n\n//     const handleSubmit = (id) => {\n//         setCheck(pre => {\n//             if(checked.includes(id)){\n//                 return  checked.filter(item => item !== id);\n//                 } else {\n//                    return [...pre, id]  \n//                 }\n//         })\n    \n//     }\n\n//     return (\n//         <div style={{ padding: 32}}> \n//             {\n//                 courses.map(course => (<div key={course.id}>\n//                     <input type=\"checkbox\" \n//                         checked={checked.includes(course.id)}\n//                         onChange={() =>handleSubmit(course.id)}\n//                     />\n//                     {course.name}\n//                 </div>))\n//             }\n//         </div>\n//     )\n// }\n\n\n// ex3 todolist\n\nfunction AppExampleUseState () {\n    const [job, setJob] = useState(\"\")\n    const [jobs, setJobs] = useState([]);\n\n    \n    const handleSetJobs = () => {\n        setJobs([...jobs, job]);\n        setJob(\"\");\n    }\n    console.log(jobs)\n\n    const clearJob = (nameJob) => {\n        setJobs( jobs.filter(item => item !== nameJob));\n    }\n\n    return (\n        <div style={{padding: 32}}>\n            <div>\n                <input value={job} onChange={item=> setJob(item.target.value)}/>\n                <button onClick={handleSetJobs}>clear</button>\n\n            </div>\n            {\n                jobs.map((j, index) => (<div key={index}>\n                    <h1>{j}</h1>\n                    <button onClick={ () => clearJob(j)}>clear</button>\n                </div>))\n            }\n        </div>\n    );\n}\nexport default AppExampleUseState;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,kBAAkBA,CAAA,EAAI;EAAAC,EAAA;EAC3B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAGpC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxBD,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEF,GAAG,CAAC,CAAC;IACvBC,MAAM,CAAC,EAAE,CAAC;EACd,CAAC;EACDI,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjB,MAAMK,QAAQ,GAAIC,OAAO,IAAK;IAC1BL,OAAO,CAAED,IAAI,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKF,OAAO,CAAC,CAAC;EACnD,CAAC;EAED,oBACIX,OAAA;IAAKc,KAAK,EAAE;MAACC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAOiB,KAAK,EAAEd,GAAI;QAACe,QAAQ,EAAEL,IAAI,IAAGT,MAAM,CAACS,IAAI,CAACM,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChEvB,OAAA;QAAQwB,OAAO,EAAEjB,aAAc;QAAAS,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7C,CAAC,EAEFlB,IAAI,CAACoB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAAM3B,OAAA;MAAAgB,QAAA,gBACpBhB,OAAA;QAAAgB,QAAA,EAAKU;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACZvB,OAAA;QAAQwB,OAAO,EAAGA,CAAA,KAAMd,QAAQ,CAACgB,CAAC,CAAE;QAAAV,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAFrBI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGlC,CAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AAEd;AAACrB,EAAA,CA9BQD,kBAAkB;AAAA2B,EAAA,GAAlB3B,kBAAkB;AA+B3B,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}