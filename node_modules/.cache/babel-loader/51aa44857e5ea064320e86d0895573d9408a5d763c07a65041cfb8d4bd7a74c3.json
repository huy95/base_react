{"ast":null,"code":"var _jsxFileName = \"/Users/huy/Documents/react-js/hook_js/base_react/src/useRefHooks.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UseRefHook() {\n  // const [count, setCount] = useState(60);\n  // let timerID = useRef(0)\n  //\n  // const handleStart = () => {\n  //     console.log(\"start-render\")\n  //      timerID.current = setInterval(() => {\n  //         setCount(prevCount => prevCount - 1);\n  //     }, 1000)\n  // }\n  //\n  // const handleStop = () => {\n  //     console.log(\"stop-render\")\n  //     console.log(timerID);\n  //     clearInterval(timerID.current)\n  // }\n  // console.log(\"reload-render\")\n  // return (\n  //     <div>\n  //         <p>{count}</p>\n  //         <button onClick={ handleStart}>start</button>\n  //         <button onClick={handleStop}>Stop</button>\n  //     </div>\n  // )\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UseReducer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = UseRefHook;\nconst initState = 0;\nconst UP_ACTION = 'up';\nconst DOWN_ACTION = 'down';\nconst reducer = (state, action) => {\n  console.log('reducer running ...');\n  switch (action) {\n    case UP_ACTION:\n      return state + 1;\n    case DOWN_ACTION:\n      return state - 1;\n    default:\n      throw new Error(\"INvalid action\");\n  }\n};\nfunction UseReducer() {\n  _s();\n  const [count, dispatch] = useReducer(reducer, initState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: dispatch(UP_ACTION),\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: dispatch(DOWN_ACTION),\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(UseReducer, \"t0rqRrWnfl+g/Fa7XFOSWfV8J6k=\");\n_c2 = UseReducer;\nexport default UseRefHook;\nvar _c, _c2;\n$RefreshReg$(_c, \"UseRefHook\");\n$RefreshReg$(_c2, \"UseReducer\");","map":{"version":3,"names":["useReducer","useRef","useState","jsxDEV","_jsxDEV","UseRefHook","children","UseReducer","fileName","_jsxFileName","lineNumber","columnNumber","_c","initState","UP_ACTION","DOWN_ACTION","reducer","state","action","console","log","Error","_s","count","dispatch","onClick","_c2","$RefreshReg$"],"sources":["/Users/huy/Documents/react-js/hook_js/base_react/src/useRefHooks.js"],"sourcesContent":["import {useReducer, useRef, useState} from \"react\";\n\n\nfunction UseRefHook() {\n    // const [count, setCount] = useState(60);\n    // let timerID = useRef(0)\n    //\n    // const handleStart = () => {\n    //     console.log(\"start-render\")\n    //      timerID.current = setInterval(() => {\n    //         setCount(prevCount => prevCount - 1);\n    //     }, 1000)\n    // }\n    //\n    // const handleStop = () => {\n    //     console.log(\"stop-render\")\n    //     console.log(timerID);\n    //     clearInterval(timerID.current)\n    // }\n    // console.log(\"reload-render\")\n    // return (\n    //     <div>\n    //         <p>{count}</p>\n    //         <button onClick={ handleStart}>start</button>\n    //         <button onClick={handleStop}>Stop</button>\n    //     </div>\n    // )\n    return (\n        <div>\n            {<UseReducer/>}\n        </div>\n    )\n}\n\nconst initState = 0;\nconst UP_ACTION = 'up';\nconst DOWN_ACTION = 'down';\n\nconst reducer = (state, action) => {\n    console.log('reducer running ...')\n    switch (action) {\n        case UP_ACTION:\n            return state + 1;\n        case DOWN_ACTION:\n            return  state -1;\n        default:\n            throw new Error(\"INvalid action\")\n    }\n}\nfunction UseReducer() {\n\n    const [count, dispatch] = useReducer(reducer, initState)\n\n    return (\n        <div>\n            <p>{count}</p>\n            <button onClick={ dispatch(UP_ACTION)}>start</button>\n            <button onClick={dispatch(DOWN_ACTION)}>Stop</button>\n        </div>\n    )\n}\n\nexport default UseRefHook"],"mappings":";;AAAA,SAAQA,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,SAASC,UAAUA,CAAA,EAAG;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACID,OAAA;IAAAE,QAAA,eACKF,OAAA,CAACG,UAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEd;AAACC,EAAA,GA7BQP,UAAU;AA+BnB,MAAMQ,SAAS,GAAG,CAAC;AACnB,MAAMC,SAAS,GAAG,IAAI;AACtB,MAAMC,WAAW,GAAG,MAAM;AAE1B,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,QAAQF,MAAM;IACV,KAAKJ,SAAS;MACV,OAAOG,KAAK,GAAG,CAAC;IACpB,KAAKF,WAAW;MACZ,OAAQE,KAAK,GAAE,CAAC;IACpB;MACI,MAAM,IAAII,KAAK,CAAC,gBAAgB,CAAC;EACzC;AACJ,CAAC;AACD,SAASd,UAAUA,CAAA,EAAG;EAAAe,EAAA;EAElB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,UAAU,CAACgB,OAAO,EAAEH,SAAS,CAAC;EAExD,oBACIT,OAAA;IAAAE,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAIiB;IAAK;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdP,OAAA;MAAQqB,OAAO,EAAGD,QAAQ,CAACV,SAAS,CAAE;MAAAR,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDP,OAAA;MAAQqB,OAAO,EAAED,QAAQ,CAACT,WAAW,CAAE;MAAAT,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd;AAACW,EAAA,CAXQf,UAAU;AAAAmB,GAAA,GAAVnB,UAAU;AAanB,eAAeF,UAAU;AAAA,IAAAO,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}